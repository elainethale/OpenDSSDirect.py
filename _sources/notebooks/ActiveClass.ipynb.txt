{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Using ActiveClass interface"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The interface described below requires the `extras` dependencies. Please see [installation instructions](https://nrel.github.io/OpenDSSDirect.py/notebooks/Installation.html)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `OpenDSSDirect.py` interface may not support all classes or element by default, however you can access these values by using the `class_to_dataframe` interface."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An example is shown below for the `Storage` class."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import opendssdirect as dss\n",
    "\n",
    "dss.run_command('Redirect ../../tests/data/13Bus/IEEE13Nodeckt.dss')\n",
    "\n",
    "dss.Circuit.AllBusNames()\n",
    "\n",
    "dss.run_command(\n",
    "    \"New Storage.{bus_name} Bus1={bus_name} phases=1 kV=2.2 kWRated={rating} kWhRated={kwh_rating} kWhStored={initial_state} %IdlingkW=0 %reserve=0 %EffCharge=100 %EffDischarge=100 State=CHARGING\".format(\n",
    "    bus_name='675',\n",
    "    rating=20,\n",
    "    kwh_rating=20,\n",
    "    initial_state=20\n",
    "    ))\n",
    "\n",
    "\n",
    "dss.run_command(\n",
    "    \"New Storage.{bus_name} Bus1={bus_name} phases=1 kV=2.2 kWRated={rating} kWhRated={kwh_rating} kWhStored={initial_state} %IdlingkW=0 %reserve=0 %EffCharge=100 %EffDischarge=100 State=CHARGING\".format(\n",
    "    bus_name='611',\n",
    "    rating=20,\n",
    "    kwh_rating=20,\n",
    "    initial_state=20\n",
    "    ))\n",
    "\n",
    "dss.run_command('Solve');"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>%Charge</th>\n",
       "      <th>%Discharge</th>\n",
       "      <th>%EffCharge</th>\n",
       "      <th>%EffDischarge</th>\n",
       "      <th>%IdlingkW</th>\n",
       "      <th>%Idlingkvar</th>\n",
       "      <th>%R</th>\n",
       "      <th>%X</th>\n",
       "      <th>%reserve</th>\n",
       "      <th>%stored</th>\n",
       "      <th>...</th>\n",
       "      <th>kWhstored</th>\n",
       "      <th>kWrated</th>\n",
       "      <th>kv</th>\n",
       "      <th>kvar</th>\n",
       "      <th>like</th>\n",
       "      <th>model</th>\n",
       "      <th>pf</th>\n",
       "      <th>phases</th>\n",
       "      <th>spectrum</th>\n",
       "      <th>yearly</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Storage.611</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Storage.675</th>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>50</td>\n",
       "      <td>0</td>\n",
       "      <td>100</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>2.2</td>\n",
       "      <td>0</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 44 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            %Charge %Discharge %EffCharge %EffDischarge %IdlingkW %Idlingkvar  \\\n",
       "Storage.611     100        100        100           100         0           0   \n",
       "Storage.675     100        100        100           100         0           0   \n",
       "\n",
       "            %R  %X %reserve %stored  ...   kWhstored kWrated   kv kvar like  \\\n",
       "Storage.611  0  50        0     100  ...          20      20  2.2    0        \n",
       "Storage.675  0  50        0     100  ...          20      20  2.2    0        \n",
       "\n",
       "            model pf phases spectrum yearly  \n",
       "Storage.611     1  1      1                  \n",
       "Storage.675     1  1      1                  \n",
       "\n",
       "[2 rows x 44 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dss.utils.class_to_dataframe('Storage')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
